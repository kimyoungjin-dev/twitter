{"version":3,"sources":["fbase.js","Components/Login/LoginForm.js","Components/Login/Social.js","Routes/Login.js","Components/Home/IsEditing.js","Components/Home/NotEditing.js","Components/Tweet.js","Components/Home/HomeForm.js","images/HomeMainImg.jpeg","Routes/Home.js","Routes/Profile.js","Components/Navigation.js","Components/Router.js","Components/Loading.js","Components/GlobalStyle.js","Components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","authService","firebase","initializeApp","auth","firebaseInstance","dbService","firestore","storageService","storage","Container","styled","div","LogoTitle","span","Form","form","Input","input","Error","ToggleButton","LoginForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","value","name","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","size","color","type","placeholder","required","maxLength","onClick","prev","ButtonContainer","Button","button","Social","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","style","marginLeft","Login","IsEditing","newTweet","toggleEditing","flexDirection","display","Contents","Text","Photo","img","NotEditing","tweetObj","isOwer","onDeleteClick","marginBottom","text","attachmentUrl","src","width","height","padding","cursor","Tweet","editing","setEditing","setNewTweet","window","confirm","doc","id","delete","refFromURL","update","File","Label","label","Attachent","Image","HomeForm","tweet","onFileChage","attachment","onClearPhotoClick","for","opacity","accept","ImageContainer","Home","userObj","setTweet","tweets","setTweets","setAttachment","getData","collection","onSnapshot","snapshot","tweetArray","docs","map","e","data","useEffect","attachmentRef","ref","child","uid","uuid","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","HomeImage","backgroundColor","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","Name","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","displayName","updateProfile","signOut","push","ListContainer","List","li","Navigation","to","alignItems","isLogin","exact","path","Loading","globalStyles","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","args","GlobalStyle","Router","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d8da6d7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nexport default firebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport styled from \"styled-components\";\nimport { FaTwitter } from \"react-icons/fa\";\n\nconst Container = styled.div`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LogoTitle = styled.span`\n  font-size: 30px;\n  display: block;\n  margin: 20px 0px;\n  font-family: \"Lato\", sans-serif;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  height: 150px;\n  width: 300px;\n  justify-content: space-between;\n`;\n\nconst Input = styled.input`\n  background-color: rgb(236, 239, 244);\n  border: none;\n  border-radius: 20px;\n  height: 35px;\n  outline: none;\n\n  ::placeholder {\n    margin-left: 10px;\n    font-size: 16px;\n    color: rgba(0, 0, 0, 0.3);\n  }\n  :not(:last-child) {\n    padding-left: 20px;\n  }\n  :last-child {\n    background-color: rgb(109, 195, 239);\n    color: white;\n    font-size: 16px;\n  }\n`;\n\nconst Error = styled.span`\n  display: block;\n  margin: 10px 0px;\n  color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ToggleButton = styled.span`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return (\n    <Container>\n      <FaTwitter size={50} color={\"rgb(109, 195, 239)\"} />\n      <LogoTitle>Log in to Twitter</LogoTitle>\n      <Form onSubmit={onSubmit}>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          onChange={onChange}\n          placeholder=\"Email\"\n          required\n          maxLength=\"20\"\n        />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          onChange={onChange}\n          placeholder=\"Password\"\n          required\n          maxLength=\"20\"\n        />\n        <Input type=\"submit\" value={newAccount ? \"Sign up\" : \"Log in\"} />\n      </Form>\n\n      <Error>{error}</Error>\n      <ToggleButton onClick={() => setNewAccount((prev) => !prev)}>\n        {newAccount ? \"Log in\" : \"Sign up\"}\n      </ToggleButton>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import { firebaseInstance, authService } from \"fbase\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillGithub, AiFillGoogleCircle } from \"react-icons/ai\";\n\nconst Container = styled.div`\n  width: 300px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  outline: none;\n  border: 1px solid black;\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: black;\n`;\n\nconst Social = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <Container>\n      <ButtonContainer>\n        <Button onClick={onSocialClick} name=\"google\">\n          <AiFillGoogleCircle color={\"white\"} size={30} />\n          <span style={{ color: \"white\", marginLeft: 10 }}>\n            Google account Login\n          </span>\n        </Button>\n        <Button\n          onClick={onSocialClick}\n          name=\"github\"\n          style={{ marginLeft: 20 }}\n        >\n          <AiFillGithub color={\"white\"} size={30} />\n          <span style={{ color: \"white\", marginLeft: 10 }}>\n            Github account Login\n          </span>\n        </Button>\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default Social;\n","import React from \"react\";\nimport LoginForm from \"Components/Login/LoginForm\";\nimport Social from \"Components/Login/Social\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Login = () => {\n  return (\n    <Container>\n      <LoginForm />\n      <Social />\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  height: 100%;\n  height: 50px;\n  width: 100%;\n  position: relative;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  width: 100%;\n  padding-left: 10px;\n\n  ::placeholder {\n    padding-left: 10px;\n    opacity: 0.6;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n  right: 10px;\n  bottom: -40px;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\n\nconst Button = styled.button`\n  all: unset;\n  margin-left: 20px;\n  font-size: 20px;\n`;\n\nconst IsEditing = ({ onSubmit, onChange, newTweet, toggleEditing }) => {\n  return (\n    <Form\n      onSubmit={onSubmit}\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n      }}\n    >\n      <Input\n        type=\"text\"\n        placeholder=\"수정할 트윗을 작성하세요\"\n        onChange={onChange}\n        value={newTweet}\n      />\n\n      <ButtonContainer>\n        <Button type=\"submit\">확인</Button>\n        <Button onClick={() => toggleEditing()}>취소</Button>\n      </ButtonContainer>\n    </Form>\n  );\n};\n\nexport default IsEditing;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { BsTrash } from \"react-icons/bs\";\n\nconst Container = styled.div``;\n\nconst Contents = styled.div`\n  display: flex;\n  height: 40px;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  padding-left: 10px;\n\n  ::placeholder {\n    padding-left: 10px;\n    opacity: 0.6;\n  }\n`;\n\nconst Text = styled.span`\n  font-size: 18px;\n`;\n\nconst Photo = styled.img`\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  right: 0;\n  top: -20px;\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: end;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Button = styled.button`\n  all: unset;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst NotEditing = ({ tweetObj, isOwer, onDeleteClick, toggleEditing }) => {\n  return (\n    <Container>\n      <Contents style={{ marginBottom: 5 }}>\n        <Text>{tweetObj.text}</Text>\n        {tweetObj.attachmentUrl && (\n          <Photo src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n        )}\n      </Contents>\n      {isOwer && (\n        <ButtonContainer>\n          <AiFillEdit\n            style={{ padding: 5, cursor: \"pointer\" }}\n            size={35}\n            onClick={() => toggleEditing()}\n          />\n          <BsTrash\n            style={{ padding: 5, cursor: \"pointer\" }}\n            size={30}\n            onClick={() => onDeleteClick()}\n          />\n        </ButtonContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default NotEditing;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport IsEditing from \"./Home/IsEditing\";\nimport NotEditing from \"./Home/NotEditing\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n  margin-top: 10px;\n`;\n\n// * tweets는 문서의 아이디를 가지고있고 세부정보 값들을 가지고있음\n\nconst Tweet = ({ tweetObj, isOwer }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  //delete, editing //\n\n  const onDeleteClick = async () => {\n    const sure = window.confirm(\"Are you sure you want to delete the Tweet?\");\n    if (sure) {\n      await dbService.doc(`tweet/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n\n  //onchange, onsubmit //\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweet/${tweetObj.id}`).update({\n      text: newTweet,\n    });\n    setNewTweet(\"\");\n    toggleEditing();\n  };\n\n  //fn\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  return (\n    <Container>\n      {editing ? (\n        <IsEditing\n          tweetObj={tweetObj}\n          onSubmit={onSubmit}\n          onChange={onChange}\n          newTweet={newTweet}\n          toggleEditing={toggleEditing}\n        />\n      ) : (\n        <NotEditing\n          tweetObj={tweetObj}\n          isOwer={isOwer}\n          toggleEditing={toggleEditing}\n          onDeleteClick={onDeleteClick}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Tweet;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst Container = styled.div`\n  width: 100%;\n  position: fixed;\n  bottom: 30px;\n  z-index: 1;\n`;\n\nconst Form = styled.form`\n  position: relative;\n  height: 50px;\n  display: flex;\n  width: 100%;\n  padding: 0px 5px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  width: 80%;\n  border-radius: 10px;\n  padding-left: 20px;\n  outline: none;\n  font-family: \"PT Serif\", serif;\n  border: 1px solid rgba(0, 0, 0, 0.7);\n  ::placeholder {\n    padding-left: 10px;\n    font-family: \"PT Serif\", serif;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  background-color: skyblue;\n  opacity: 0.7;\n  border-radius: 100%;\n  width: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nconst Button = styled.button`\n  all: unset;\n  width: 100%;\n  text-align: center;\n  font-family: \"PT Serif\", serif;\n`;\n\nconst File = styled.input`\n  position: absolute;\n  width: 40px;\n  height: 50px;\n  right: 100px;\n  border-radius: 20px;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  width: 40px;\n  height: 50px;\n  right: 65px;\n`;\n\nconst Attachent = styled.div`\n  position: absolute;\n  bottom: 100px;\n  right: 15px;\n`;\n\nconst Contents = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Image = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nconst HomeForm = ({\n  onSubmit,\n  onChange,\n  tweet,\n  onFileChage,\n  attachment,\n  onClearPhotoClick,\n}) => {\n  return (\n    <>\n      <Container>\n        <Form onSubmit={onSubmit}>\n          <Input\n            type=\"text\"\n            placeholder=\"Write a Tweet\"\n            maxLength={120}\n            onChange={onChange}\n            value={tweet}\n          />\n\n          <ButtonContainer>\n            <Button>Tweet</Button>\n          </ButtonContainer>\n\n          <Label for=\"attach-file\">\n            <MdAddAPhoto style={{ width: \"100%\", height: \"100%\" }} />\n          </Label>\n          <File\n            style={{ opacity: 0 }}\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChage}\n            id=\"attach-file\"\n          />\n        </Form>\n      </Container>\n\n      <Attachent>\n        {attachment && (\n          <Contents>\n            <Image src={attachment} width=\"50px\" height=\"50px\" />\n            <span\n              style={{ marginLeft: 10 }}\n              onClick={() => onClearPhotoClick()}\n            >\n              Cancel\n            </span>\n          </Contents>\n        )}\n      </Attachent>\n    </>\n  );\n};\n\nexport default HomeForm;\n","export default __webpack_public_path__ + \"static/media/HomeMainImg.9ee5ede4.jpeg\";","import React, { useState, useEffect } from \"react\";\nimport { storageService } from \"fbase\";\nimport { dbService } from \"fbase\";\nimport Tweet from \"Components/Tweet\";\nimport { v4 as uuid } from \"uuid\";\nimport HomeForm from \"Components/Home/HomeForm\";\nimport HomeImage from \"images/HomeMainImg.jpeg\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div``;\n\nconst ImageContainer = styled.div`\n  background-color: blue;\n  margin-top: 10px;\n  height: 300px;\n`;\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Home = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [tweets, setTweets] = useState([]); //tweets는 문서의 아이디를 가지고있고 세부정보 값들을 가지고있음\n  const [attachment, setAttachment] = useState(\"\");\n\n  const getData = async () => {\n    dbService.collection(\"tweet\").onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((e) => ({\n        id: e.id,\n        ...e.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuid()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"tweet\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  //file\n\n  const onFileChage = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const theFile = files[0]; //파일을 갖는다.\n    const reader = new FileReader(); //reader을 불러온다.\n    reader.onloadend = (event) => {\n      const {\n        currentTarget: { result },\n      } = event;\n      setAttachment(result); //setAttachment 에 저장\n    }; //그림파일을 읽기를 기다린다.\n    reader.readAsDataURL(theFile); //불러온 reader로 파일을 읽는다.\n  };\n\n  const onClearPhotoClick = () => setAttachment(null);\n\n  return (\n    <Container>\n      <ImageContainer>\n        <Image src={HomeImage} style={{ backgroundColor: \"white\" }} />\n      </ImageContainer>\n      <HomeForm\n        onSubmit={onSubmit}\n        onChange={onChange}\n        tweet={tweet}\n        onFileChage={onFileChage}\n        attachment={attachment}\n        onClearPhotoClick={onClearPhotoClick}\n      />\n      <>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwer={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </>\n    </Container>\n  );\n};\n\nexport default Home;\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { GrLogout } from \"react-icons/gr\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n  padding-bottom: 100px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  height: 100px;\n  margin: 20px 0px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 70%;\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  font-family: \"PT Serif\", serif;\n  ::placeholder {\n    padding-left: 10px;\n  }\n`;\n\nconst Button = styled.button`\n  all: unset;\n  text-align: center;\n  margin: 20px 0px;\n  font-family: \"PT Serif\", serif;\n`;\n\nconst Name = styled.span`\n  font-family: \"PT Serif\", serif;\n`;\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(\"\");\n  const history = useHistory();\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== \"\") {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const onHomeClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  return (\n    <Container>\n      <div>\n        <Name> Name : {userObj.displayName}</Name>\n      </div>\n      <Form onSubmit={onSubmit}>\n        <Input\n          onChange={onChange}\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Write down the account name you want to change\"\n        />\n        <Button type=\"submit\">Modify Nickname</Button>\n      </Form>\n\n      <GrLogout onClick={onHomeClick} />\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { BiHomeHeart } from \"react-icons/bi\";\n\nconst Container = styled.div`\n  padding: 0px 5px;\n  margin-top: 10px;\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  list-style: none;\n`;\n\nconst List = styled.li`\n  cursor: pointer;\n  font-size: 17px;\n`;\n\nconst Name = styled.span`\n  font-family: \"PT Serif\", serif;\n`;\n\nconst Navigation = () => {\n  return (\n    <Container>\n      <ListContainer>\n        <List>\n          <Link\n            to=\"/\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center;\",\n            }}\n          >\n            <BiHomeHeart\n              size={40}\n              color={\"rgb(30,156,235)\"}\n              style={{ marginBottom: 10 }}\n            />\n            <Name>Home</Name>\n          </Link>\n        </List>\n\n        <List>\n          <Link\n            to=\"/profile\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center;\",\n            }}\n          >\n            <FaUserCircle\n              size={40}\n              style={{ marginBottom: 10 }}\n              color=\"skyblue\"\n            />\n            <Name>Profile</Name>\n          </Link>\n        </List>\n      </ListContainer>\n    </Container>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Login from \"Routes/Login\";\nimport Home from \"Routes/Home\";\nimport Profile from \"Routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nexport default ({ isLogin, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLogin && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLogin ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n","import React from \"react\";\n\nconst Loading = () => {\n  return <span>Loading</span>;\n};\n\nexport default Loading;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n\n    *{\n        box-sizing:border-box;\n    }\n\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    \n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n`;\n\nexport default globalStyles;\n","import React, { useState, useEffect } from \"react\";\nimport Router from \"./Router\";\nimport { authService } from \"fbase\";\nimport Loading from \"Components/Loading\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      <GlobalStyle />\n      {init ? (\n        <Router\n          isLogin={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}